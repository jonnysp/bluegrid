html,body{
	height:100%
}

body{
	overflow-x:hidden;
}


.container {	
	padding:0 (@contentpadding);
	@media all and (max-width: @desktop-width) {
		max-width: 100%;
	}
	@media all and (min-width: @desktop-width) {
		margin:0 auto;
		max-width: @desktop-width;
	}
	.clearfix();
}

.row{
	margin:0 (@grid-column-padding / -2);
	padding-bottom:@grid-column-padding / 2;
	.clearfix();
}

[class*="col-"]{
	float: left;
	min-height: 1px;
	width:100%;
	padding:0 (@grid-column-padding / 2);
}

.type(@type) when (@type = width) {
	width:percentage( @index / @grid-columns,5);	
}
  
.type(@type) when (@type = left) {
	position:relative;
	left:percentage( @index / @grid-columns,5);	
}
  
.type(@type) when (@type = right) {
	position:relative;
	right:percentage( @index / @grid-columns,5);
}

.type(@type) when (@type = margin-left) {
		margin-left:percentage( @index / @grid-columns,5);
}


.colX (@index,@prefix:-,@type:width) when (@index > 0) {
	.col@{prefix}@{index}{
		.type(@type);
	}
  .colX(@index - 1,@prefix,@type);
}
.colX (0) {}
	
	
.colX (@grid-columns); 


@media (min-width: @mobile-width) {
	.colX (@grid-columns,-sm-,width);
	.colX (@grid-columns,-push-,left);
    .colX (@grid-columns,-pull-,right);
}
@media (min-width: @tablet-width) {
	.colX (@grid-columns,-lg-,width);
	.colX (@grid-columns,-offset-,margin-left);
}


	


